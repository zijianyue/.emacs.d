* Magit v2.91.0 Release Notes (unreleased)
** Breaking changes

- The commands ~magit-branch-pull-request~, ~magit-checkout-pull-request~
  and ~magit-worktree-checkout-pull-request~ were removed in favor of
  improved implementations provided by the new Forge package.

- ~C-c C-e~ is no longer bound to ~magit-dispatch-popup~.  It is bound
  to  ~magit-edit-thing~ now, so that Forge can add section-specific
  bindings using this key.  ~magit-dispatch-popup~ continues to be
  available on ~h~, ~?~ and ~C-c C-c~.  #3659

- ~C-c C-b~ is no longer bound to ~magit-browse-thing~ to avoid a conflict
  with ~magit-go-backward~ in diff and log buffers.  ~C-c C-w~ (as in web)
  is used instead now.  #3659

** Changes since v2.90.0

- It isn't always obvious that a section can be expanded, especially
  to users who are just getting started with Magit.  Mainly to make
  it easier for those users, expandable and collapsable sections now
  get an indicator in the fringe.

  The new option ~magit-section-visibility-indicator~ can be used to
  disable this or to select the alternative style, which shows an
  ellipsis at the end of the heading of each expandable section
  instead.  #3679

- Added ~bug-reference-mode~ to ~git-commit-setup-hook~.  e19e8fb1e

- The "Version" column in ~magit-submodule-list-mode~ and
  ~magit-repolist-mode~ buffers now shows when a repository is dirty.
  0b86dbfd6

- Added new command ~magit-log-merged~.  This command requires
  ~git-when-merged~ (https://github.com/mhagger/git-when-merged).  It
  isn't bound in ~magit-log-popup~ by default.  To add it, you can use
  something like

  #+BEGIN_SRC emacs-lisp
    (magit-define-popup-action 'magit-log-popup
      ?m "Log commit's merge" 'magit-log-merged)
  #+END_SRC

  #3657

- Added new class slot ~keymap~ to allow other packages to define
  section-specific keymaps without naming them ~magit-TYPE-section-map~,
  which would mean using a symbol prefix (~magit-~) that does not match
  the package name.

- Added new option ~magit-diff-refine-ignore-whitespace~, overriding and
  defaulting to the value of ~smerge-refine-ignore-whitespace~.  #3671

- Added new option ~magit-diff-paint-whitespace-lines~, which controls
  in what kind of lines (added/removed/context) whitespace errors are
  highlighted.  #3671

- It is now possible to show whitespace errors only in uncommitted
  changes by setting ~magit-diff-paint-whitespace~ to ~uncommitted~.  The
  obsolete value ~status~ is treated as a synonym.  The intention always
  was to allow limiting to uncommitted changes and limiting to changes
  shown in the status buffer was the closest approximation readily
  available when this feature was first added.  #3671

- The commands ~magit-commit-instant-fixup~, ~magit-commit-instant-squash~
  and ~magit-rebase-autosquash~ now unconditionally preserve empty
  commits that were already present before the autosquash rebase
  performed by these commands.  This is the safe default; if you want
  to drop such commits, then you have to enable ~--autosquash~ in the
  popup and then invoke ~magit-rebase-interactive~.  #3670

- The option ~magit-repository-directories~ defaults to ~nil~ again
  because the non-nil default added in v2.90.0 led to surprising
  changes in behavior.  The documentation of this option and the
  related ~magit-status~ command were made less ambiguous.  #3673

- Renamed the face ~git-commit-note~ to ~git-commit-keyword~ because that
  is what text in brackets is called elsewhere in Magit and because
  the term "note" was ambiguous in this context.  The old face name
  is still defined as an alias, but that will be removed eventually.

- The command ~magit-worktree-checkout~ now also offers tags and remote
  branches as completion candidates.  #3692

- The command ~magit-commit-reword~ now always uses ~--allow-empty~
  because when you reword an empty commit, then you have already
  confirmed that you are okay with that commit being empty.

- The new buffer-local variable ~git-commit-need-summary-line~, can
  be of use if you want to write Git notes without separating the
  first line with an empty line from the rest of the text.  #3676

- The command ~magit-copy-section-value~ now removes the +/- diff
  marker column when a prefix argument is given and the region is
  active within a hunk.  #3716

** Fixes since v2.90.0

- Bumped the minimal required version of ~git-commit~ to the correct
  version.  e9bd33758

- Dropped the new "v" prefix that we started to add to release tags
  starting with the previous release in places where that prefix is
  undesirable.  f441cf6d7

- Staging and unstaging submodules while ~diff.submodule~'s value is ~log~
  broke shortly before the v2.90.0 release.  #3654

- When another window is already displaying the file buffer, then
  ~magit-display-file-buffer-other-window~ did additionally display
  it in the current window.  #3662

- It was undefined whether highlighting of word-granularity
  differences or of whitespace-error had higher priority.  #3671

- The Custom type definition of ~magit-diff-adjust-tab-width~ was
  broken.  #3671

- In the log-select buffers point was no longer placed on the same
  commit as was at point in the buffer from which the command was
  invoked.  #3674

- ~magit-diff-type~ falsely concluded that a diff buffer showed
  unstaged changes when diffing a range where the right side resolves
  to the same commit as ~HEAD~.  #3666

- ~magit-log-trace-definition-function~ defaulted to ~which-function~,
  which isn't reliable because it used Imenu, which uses a cache but
  by default never invalidates.  Now we use ~magit-which-function~, a
  replacement that never uses an outdated cache.

- ~magit-log-trace-definition~ didn't account for Git treating "-"
  differently from e.g. "_", leading to false-positives like
  "foo-suffix" being considered a match for "foo".

- A regression in ~magit-log-move-to-parent~ prevented it from doing its
  job.  #3682

- ~magit-clone~ didn't run ~magit-credential-hook~.  #3683

- ~magit-list-repositories~ failed if one of the repositories that it
  tries to list is empty.  #3686

- The summary element from ~git-commit-font-lock-keyword-1~ lost against
  the elements of ~git-commit-elisp-text-mode-keywords~, causing the
  summary line to lose its special appearance when a "string" or
  `symbol' appears in it.

- ~magit-split-branch-name~ did not take into account that remote names
  can contain slashes.  #3685

- ~magit-which-function~ now simply resets Imenu's cache and then calls
  ~which-function~.  The old approach that tried to outsmart Imenu was
  broken.  #3691

- ~magit-describe-section-briefly~ did not actually display a section
  ident when called interactively, as the docstring claimed.  Now it
  displays the section ident, which is useful in
  ~magit-status-initial-section~.

- Section movement commands got confused by type change sections being
  treated as a special kind of hunk.  #3698
